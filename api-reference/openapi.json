{
  "swagger": "2.0",
  "info": {
    "title": "Green Suggest API",
    "description": "This is the API for the Green Suggest Project",
    "contact": {
      "email": "sharifialireza276@gmail.com"
    },
    "schemes": [
      "https"
    ],
    "version": "v1"
  },
  "host": "api.greensuggest.com",
  "schemes": [
    "https"
  ],
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Token": []
    }
  ],
  "paths": {
    "/auth/cancel-sub/": {
      "post": {
        "operationId": "auth_cancel-sub_create",
        "description": "Cancel Subscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/change-password-token/": {
      "post": {
        "operationId": "auth_change-password-token_create",
        "description": "Change Password Panel",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "404": {
            "description": "Not Found: There is no user with this resetpass token in the database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/change-password/": {
      "post": {
        "operationId": "auth_change-password_create",
        "description": "Change Password Panel",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "404": {
            "description": "Not Found: There is no user with this resetpass token in the database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/confirmation-otp/": {
      "post": {
        "operationId": "auth_confirmation-otp_create",
        "description": "Email Confirmation",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOTP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "404": {
            "description": "Not Found: There is no user with this email in the database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/device-tokens/": {
      "get": {
        "operationId": "auth_device-tokens_list",
        "description": "Get User Device Tokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "put": {
        "operationId": "auth_device-tokens_update",
        "description": "Update User Device Tokens",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/gmail/": {
      "post": {
        "operationId": "auth_gmail_create",
        "description": "\nCheck user reset pass token. (in reset pass email)\n",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/info/": {
      "get": {
        "operationId": "auth_info_list",
        "description": "Get User Info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "put": {
        "operationId": "auth_info_update",
        "description": "Update User Info",
        "parameters": [
          {
            "name": "full_name",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "gender",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "date_of_birth",
            "in": "formData",
            "required": false,
            "type": "string",
            "format": "date",
            "x-nullable": true
          },
          {
            "name": "phone_number",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "address",
            "in": "formData",
            "required": false,
            "type": "string",
            "x-nullable": true
          },
          {
            "name": "profile_pic_path",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "cover_pic_path",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "short_bio",
            "in": "formData",
            "required": false,
            "type": "string",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/login/": {
      "post": {
        "operationId": "auth_login_create",
        "description": "Login Panel",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "401": {
            "description": "Unauthorized: Authentication failed (Wrong password)"
          },
          "403": {
            "description": "Forbidden: You are not allowed to use this app with this email"
          },
          "404": {
            "description": "Not Found: User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/progenlink/": {
      "get": {
        "operationId": "auth_progenlink_list",
        "description": "Generate ProLink",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/register/": {
      "post": {
        "operationId": "auth_register_create",
        "description": "Register Panel",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/send-otp/": {
      "post": {
        "operationId": "auth_send-otp_create",
        "description": "Send OTP Panel",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOTP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "404": {
            "description": "Not Found: There is no user with this email in the database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/toggle-activation/": {
      "patch": {
        "operationId": "auth_toggle-activation_partial_update",
        "description": "Toggle Activation User Account",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: The user_id can't be null"
          },
          "403": {
            "description": "Forbidden: Only staff members have permission to do this action"
          },
          "404": {
            "description": "Not Found: There is no user with this user id in the database"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/token/": {
      "post": {
        "operationId": "auth_token_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenObtainPair"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/token/refresh/": {
      "post": {
        "operationId": "auth_token_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/verify-otp/": {
      "post": {
        "operationId": "auth_verify-otp_create",
        "description": "verify otp",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Otp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request: Invalid Input"
          },
          "401": {
            "description": "Unauthorized: Wrong otp code"
          },
          "404": {
            "description": "Not Found: You didn't request to build an otp code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/marketplace/search/": {
      "get": {
        "operationId": "marketplace_search_list",
        "description": "Search marketplace",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner_id",
            "in": "query",
            "description": "(if not provided then fetch all. if 0 then fetch user products)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page Number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Page Size",
            "type": "integer",
            "default": 10
          },
          {
            "name": "price_min",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price_max",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketplace"
        ]
      },
      "parameters": []
    },
    "/marketplace/user/": {
      "get": {
        "operationId": "marketplace_user_list",
        "description": "Get user products",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketplace"
        ]
      },
      "post": {
        "operationId": "marketplace_user_create",
        "description": "Create product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketplace"
        ]
      },
      "put": {
        "operationId": "marketplace_user_update",
        "description": "Update product",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProduct"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketplace"
        ]
      },
      "delete": {
        "operationId": "marketplace_user_delete",
        "description": "Delete product",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "deleted"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "marketplace"
        ]
      },
      "parameters": []
    },
    "/content/ai-hist/": {
      "get": {
        "operationId": "ai-hist_list",
        "description": "Get AI History",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "post": {
        "operationId": "ai-hist_create",
        "description": "Add AI History",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddAiHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/blog-discard/": {
      "delete": {
        "operationId": "blog-discard_delete",
        "description": "Discard Blog Content",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/blog-image/": {
      "post": {
        "operationId": "blog-image_create",
        "description": "Add Blog Image",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBlogContent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "delete": {
        "operationId": "blog-image_delete",
        "description": "Delete Blog Image",
        "parameters": [
          {
            "name": "image_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/dashboard/": {
      "get": {
        "operationId": "dashboard_list",
        "description": "Get Dashboard Data",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/earnboard/": {
      "get": {
        "operationId": "earnboard_list",
        "description": "Get Earn Board Data",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/info/": {
      "get": {
        "operationId": "info_list",
        "description": "Get content by id",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "post": {
        "operationId": "info_create",
        "description": "Create content",
        "parameters": [
          {
            "name": "video_file",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "duration",
            "in": "formData",
            "required": false,
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "x-nullable": true
          }
        ],
        "responses": {
          "201": {
            "description": "created"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "put": {
        "operationId": "info_update",
        "description": "Update content",
        "parameters": [
          {
            "name": "thumbnail",
            "in": "formData",
            "required": false,
            "type": "file",
            "x-nullable": true
          },
          {
            "name": "title",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string",
            "x-nullable": true
          },
          {
            "name": "from_obj",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "to_obj",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "material",
            "in": "formData",
            "required": false,
            "type": "string",
            "maxLength": 255,
            "x-nullable": true
          },
          {
            "name": "is_draft",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "content_id",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "delete": {
        "operationId": "info_delete",
        "description": "Delete content",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/saved/": {
      "get": {
        "operationId": "saved_list",
        "description": "Search content",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tutorial_type",
            "in": "query",
            "description": "Tutorial Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "from_obj",
            "in": "query",
            "description": "From Object",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_obj",
            "in": "query",
            "description": "To Object",
            "required": false,
            "type": "string"
          },
          {
            "name": "material",
            "in": "query",
            "description": "Material",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page Number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Page Size",
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/search/": {
      "get": {
        "operationId": "search_list",
        "description": "Search content",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner_id",
            "in": "query",
            "description": "(if not provided then fetch all. if 0 then fetch user products)",
            "required": false,
            "type": "string"
          },
          {
            "name": "tutorial_type",
            "in": "query",
            "description": "Tutorial Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "from_obj",
            "in": "query",
            "description": "From Object",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_obj",
            "in": "query",
            "description": "To Object",
            "required": false,
            "type": "string"
          },
          {
            "name": "material",
            "in": "query",
            "description": "Material",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page Number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Page Size",
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/state/": {
      "post": {
        "operationId": "state_create",
        "description": "Add Watch Time",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/toggle-draft/": {
      "post": {
        "operationId": "toggle-draft_create",
        "description": "Toggle Draft",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/toggle-like/": {
      "post": {
        "operationId": "toggle-like_create",
        "description": "Toggle Like",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/toggle-save/": {
      "post": {
        "operationId": "toggle-save_create",
        "description": "Toggle Saved",
        "parameters": [
          {
            "name": "content_id",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/withdrawal-admin/": {
      "get": {
        "operationId": "withdrawal-admin_list",
        "description": "Get Withdraw Requests",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "post": {
        "operationId": "withdrawal-admin_create",
        "description": "Accept Withdrawal Request",
        "parameters": [
          {
            "name": "withdraw_id",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/content/withdrawal/": {
      "get": {
        "operationId": "withdrawal_list",
        "description": "Get Withdraw Requests",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "post": {
        "operationId": "withdrawal_create",
        "description": "Withdraw Money",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWithdraw"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Withdraw"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "unauthorized"
          },
          "403": {
            "description": "forbidden"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "content"
        ]
      },
      "parameters": []
    },
    "/chat/history/": {
      "get": {
        "operationId": "history_list",
        "description": "Get Chat History",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "friend_id",
            "in": "query",
            "description": "Friend ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page Number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Page Size",
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "chat"
        ]
      },
      "delete": {
        "operationId": "history_delete",
        "description": "Delete Chat",
        "parameters": [
          {
            "name": "message_id",
            "in": "query",
            "description": "Message ID",
            "type": "integer"
          },
          {
            "name": "delete_flag",
            "in": "query",
            "description": "Delete for me, or all",
            "type": "string",
            "default": "me"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "chat"
        ]
      },
      "parameters": []
    },
    "/chat/page/": {
      "get": {
        "operationId": "page_list",
        "description": "Get Chat Page",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "chat"
        ]
      },
      "delete": {
        "operationId": "page_delete",
        "description": "Clear Chat History",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "friend_id",
            "in": "query",
            "description": "Friend ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "delete_flag",
            "in": "query",
            "description": "Delete for me, or all",
            "type": "string",
            "default": "me"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ],
        "tags": [
          "chat"
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "ChangePasswordToken": {
      "required": [
        "new_password"
      ],
      "type": "object",
      "properties": {
        "new_password": {
          "title": "New password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ChangePassword": {
      "required": [
        "old_password",
        "new_password"
      ],
      "type": "object",
      "properties": {
        "old_password": {
          "title": "Old password",
          "type": "string",
          "minLength": 1
        },
        "new_password": {
          "title": "New password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "SendOTP": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "DeviceToken": {
      "type": "object",
      "properties": {
        "device_tokens": {
          "type": "array",
          "items": {
            "title": "Device tokens",
            "type": "string",
            "minLength": 1
          },
          "x-nullable": true
        }
      }
    },
    "Gmail": {
      "type": "object",
      "properties": {
        "access_token": {
          "title": "Access token",
          "type": "string",
          "default": "string",
          "minLength": 1
        }
      }
    },
    "Login": {
      "required": [
        "email",
        "password"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "required": [
        "otp_code"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "x-nullable": true
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "otp_code": {
          "title": "Otp code",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TokenObtainPair": {
      "required": [
        "username",
        "password"
      ],
      "type": "object",
      "properties": {
        "username": {
          "title": "Username",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TokenRefresh": {
      "required": [
        "refresh"
      ],
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        },
        "access": {
          "title": "Access",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "Otp": {
      "required": [
        "email",
        "otp_code"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "otp_code": {
          "title": "Otp code",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InternalProUser": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InternalUsersInfo": {
      "required": [
        "id_list"
      ],
      "type": "object",
      "properties": {
        "id_list": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "InternalProductInfo": {
      "required": [
        "id_list"
      ],
      "type": "object",
      "properties": {
        "id_list": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "CreateProduct": {
      "required": [
        "title",
        "description",
        "price"
      ],
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "minLength": 1
        },
        "price": {
          "title": "Price",
          "type": "number"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string",
            "readOnly": true,
            "format": "uri"
          }
        },
        "main_image": {
          "title": "Main image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        }
      }
    },
    "AddAiHistory": {
      "type": "object",
      "properties": {
        "from_obj": {
          "title": "From obj",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "to_obj": {
          "title": "To obj",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "material": {
          "title": "Material",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        }
      }
    },
    "CreateBlogContent": {
      "type": "object",
      "properties": {
        "content_id": {
          "title": "Content id",
          "type": "integer"
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        }
      }
    },
    "ContentState": {
      "required": [
        "content_id",
        "is_played"
      ],
      "type": "object",
      "properties": {
        "content_id": {
          "title": "Content id",
          "type": "integer"
        },
        "is_played": {
          "title": "Is played",
          "type": "boolean"
        }
      }
    },
    "CreateWithdraw": {
      "required": [
        "amount"
      ],
      "type": "object",
      "properties": {
        "amount": {
          "title": "Amount",
          "type": "number"
        }
      }
    },
    "Withdraw": {
      "required": [
        "user_id",
        "amount"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified": {
          "title": "Modified",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user_id": {
          "title": "User id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "amount": {
          "title": "Amount",
          "type": "number"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    }
  }
}